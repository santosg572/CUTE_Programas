t = seq(0,4,.1)
x = cos(t)
plot(t,x)
title: "prueba.Rmd"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("website")
t1 = 0
t2 = 4
n = 100
t = seq(t1, t2, length.out = n)
landa = 1
D = 1
y = exp(-landa * t)
plot(t, y, type='l')
fun <- function(x=0){
res = -landa * x
}
del = t[2] - t[1]
print(del)
y0 = 1
Euler_estocas <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(D*del) * rnorm(n)
for (i in 2:n){
y2 = y1 +  del * fun(y1) + dw[i]
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
Runge_Kutta_ecos <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(2*D*del) * rnorm(n)
for (i in 2:n){
k1 = fun(y1)
print(dw[i])
k2 = fun(y1+del*k1 + dw[i])
y2 = y1 + .5*del*(k1+k2)
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
#ye = Euler_estocas(del, n, y0, 1)
yr =Runge_Kutta_ecos(del, n, y0, 1)
points(t, yr, type='l', col='red')
t1 = 0
t2 = 4
n = 100
t = seq(t1, t2, length.out = n)
landa = 1
D = 1
y = exp(-landa * t)
plot(t, y, type='l')
fun <- function(x=0){
res = -landa * x
}
del = t[2] - t[1]
print(del)
y0 = 1
Euler_estocas <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(D*del) * rnorm(n)
for (i in 2:n){
y2 = y1 +  del * fun(y1) + dw[i]
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
Runge_Kutta_ecos <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(2*D*del) * rnorm(n)
for (i in 2:n){
k1 = fun(y1)
print(dw[i])
k2 = fun(y1+del*k1 + dw[i])
y2 = y1 + .5*del*(k1+k2)
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
ye = Euler_estocas(del, n, y0, 1)
yr =Runge_Kutta_ecos(del, n, y0, 1)
points(t, yr, type='l', col='red')
t1 = 0
t2 = 4
n = 100
t = seq(t1, t2, length.out = n)
landa = 1
D = 1
y = exp(-landa * t)
plot(t, y, type='l')
fun <- function(x=0){
res = -landa * x
}
del = t[2] - t[1]
print(del)
y0 = 1
Euler_estocas <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(D*del) * rnorm(n)
for (i in 2:n){
y2 = y1 +  del * fun(y1) + dw[i]
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
Runge_Kutta_ecos <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(2*D*del) * rnorm(n)
for (i in 2:n){
k1 = fun(y1)
print(dw[i])
k2 = fun(y1+del*k1 + dw[i])
y2 = y1 + .5*del*(k1+k2)
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
ye = Euler_estocas(del, n, y0, 1)
yr =Runge_Kutta_ecos(del, n, y0, 1)
points(t, ye, type='l', col='red')
points(t, yr, type='l', col='red')
t1 = 0
t2 = 4
n = 100
t = seq(t1, t2, length.out = n)
landa = 1
D = 1
y = exp(-landa * t)
plot(t, y, type='l')
fun <- function(x=0){
res = -landa * x
}
del = t[2] - t[1]
print(del)
y0 = 1
Euler_estocas <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(D*del) * rnorm(n)
for (i in 2:n){
y2 = y1 +  del * fun(y1 + dw[i])
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
Runge_Kutta_ecos <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(2*D*del) * rnorm(n)
for (i in 2:n){
k1 = fun(y1)
print(dw[i])
k2 = fun(y1+del*k1 + dw[i])
y2 = y1 + .5*del*(k1+k2)
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
ye = Euler_estocas(del, n, y0, 1)
yr =Runge_Kutta_ecos(del, n, y0, 1)
points(t, ye, type='l', col='red')
points(t, yr, type='l', col='red')
t1 = 0
t2 = 4
n = 100
t = seq(t1, t2, length.out = n)
landa = 1
D = 1
y = exp(-landa * t)
plot(t, y, type='l')
fun <- function(x=0){
res = -landa * x
}
del = t[2] - t[1]
print(del)
y0 = 1
Euler_estocas <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(D*del) * rnorm(n)
for (i in 2:n){
y2 = y1 +  del * fun(y1 + dw[i])
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
Runge_Kutta_ecos <- function(del=0, n=0, y0=0, t0=0){
y = rep(0, n)
y[1] = y0
y1 = y0
dw = sqrt(2*D*del) * rnorm(n)
for (i in 2:n){
k1 = fun(y1)
print(dw[i])
k2 = fun(y1+del*k1 + dw[i])
y2 = y1 + .5*del*(k1+k2)
y[i] = y2
y1 = y2
t0 = t0+del
}
res = y
}
ye = Euler_estocas(del, n, y0, 1)
yr =Runge_Kutta_ecos(del, n, y0, 1)
points(t, ye, type='l', col='red')
points(t, yr, type='l', col='blue')
mat = matrix(1:12, ndol=3)
print(mat)
mat = matrix(1:12, ndol=3)
print(mat)
